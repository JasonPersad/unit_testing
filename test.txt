//unit testing example scenario

//pseudo code!

isWeekDay {
	get dayOfWeekIndex;
	if DayOfWeekIndex ~= [0-4] {	
		return True;
	}
	return False;


//pseudo test!

test_isWeekDay_True {
	for i in range (0,5) {
		# testing for indices 0 - 4 inc.
		assert isWeekDay(i) returns True
	}
		
test_isWeekDay_False {
	for i in range (6,8) {
		# testing for indices 6 and 7
		assert isWeekDay(i) returns False
	}
		
////////////////////////////////////////////////////////////////////////////////////////////
//integration testing example scenario (testing components in pairs)

// test UI to logic
test_get_account_details_valid {
	send GET request to READ account details for valid account
		assert correct return code for success (200, OK)

test_get_account_details_invalid {
	send GET request to READ account details for invalid account
		assert correct return code fail ( , )



////////////////////////////////////////////////////////////////////////////////////////////
//system test

CREATE a new account
	verify that this action returns success

READ all account details ordered by create datetime, order descending 
	verify that the details from account created are lastest record returned

UPDATE this last account to contain new details
	verify that this action returns success

READ this account's details  
	verify that the details from update made above are present

DELETE this account
	verify that the action returns success

READ all account details ordered by create datetime, order descending 
	verify that the new account created is no longer in existance


////////////////////////////////////////////////////////////////////////////////////////////



